!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.watermark=t():e.watermark=t()}(this,(()=>(()=>{"use strict";var e={d:(t,o)=>{for(var r in o)e.o(o,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:o[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)},t={};e.d(t,{default:()=>l});var o={};const r="zxWatermark";var n={w_width:240,w_height:140,w_top:"0px",w_left:"0px",w_rotateDeg:25,w_font:"bold 48px serif",w_color:"#666",w_opacity:"0.1",w_zIndex:"100000"};o.setWaterMark=e=>{let t=o.loadWatermark(e);null===document.getElementById(t)&&(t=o.loadWatermark(e))},o.removeWatermark=()=>{let e=r;null!==document.getElementById(e)&&queueMicrotask((()=>{document.body.removeChild(document.getElementById(e))}))},o.loadWatermark=e=>{let t={},l=e.w_texts;t=e.w_options&&"[object Object]"===Object.prototype.toString.call(e.w_options)?Object.assign({},n,e.w_options):n;let a=r;null!==document.getElementById(a)&&document.body.removeChild(document.getElementById(a));let d=document.createElement("canvas");d.width=t.w_width,d.height=t.w_height;let c=d.getContext("2d");if(c.rotate(-t.w_rotateDeg*Math.PI/180),c.font=t.w_font,c.fillStyle=t.w_color,c.textAlign="center",c.textBaseline="Middle",e.w_texts&&"[object Array]"===Object.prototype.toString.call(e.w_texts))for(let e=0;e<l.length;e++){const t=l[e];c.fillText(t,d.width/5,d.height/1.4+30*e)}var i=document.createElement("div");return i.id=a,i.className="wm-complete",i.style.pointerEvents="none",i.style.top=t.w_top,i.style.left=t.w_left,i.style.opacity=t.w_opacity,i.style.position="fixed",i.style.zIndex=t.w_zIndex,i.style.width="100%",i.style.height="100%",i.style.background="url("+d.toDataURL()+") left top repeat",document.body.appendChild(i),queueMicrotask((()=>{o.observeDomChange(i,e)})),a},o.observeDomChange=(e,t)=>{const r=document.querySelector("body");o.Observer=new MutationObserver((function(r,n){for(let l of r)l.target===e&&(l.target.remove(),o.loadWatermark(t),n.disconnect()),l.removedNodes.length&&l.removedNodes[0]===e&&(o.loadWatermark(t),n.disconnect())})),o.Observer.observe(r,{attributes:!0,childList:!0,subtree:!0})};const l=o;return t.default})()));
//# sourceMappingURL=index.js.map